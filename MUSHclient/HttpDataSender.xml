<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Wednesday, May 07, 2025, 12:46 PM -->
<!-- MuClient version 5.06 -->

<!-- Plugin "HttpDataSender" generated by Plugin Wizard -->

<muclient>
<plugin
   name="HttpDataSender"
   author="charles smith"
   id="1850e3009add948b62780283"
   language="vbscript"
   purpose="Sends data via HTTP POST request."
   date_written="2025-05-07 12:44:49"
   requires="4.00"
   version="1.2"
   save_state="y"
   >

<description trim="y">
<![CDATA[
HttpDataSender Plugin
---------------------

This plugin provides an alias to send data via an HTTP POST request.
The data is sent as a raw string in the body of the request.

Configuration:
--------------
The plugin uses world variables for configuration. You can view or change them
using the 'send_http_config' alias.

  send_http_config show                     - Shows current configuration.
  send_http_config url <new_url>            - Sets the target URL.
  send_http_config contenttype <mime_type>  - Sets the Content-Type header.
                                            (Default: text/plain; charset=utf-8)
  send_http_config silent <true|false>      - Toggles silent mode. If true, no
                                            "Sending HTTP POST..." messages are shown.
                                            (Default: false)

Usage:
------
  send_http_data {your_payload_string}

Example:
  send_http_data namePlayer1Health100Mana50

This will send the string "namePlayer1Health100Mana50" as the body
of a POST request to the configured URL.

The curl equivalent for the default configuration (if your payload is in a variable $msdp_payload) would be:
  curl -s -o /dev/null -X POST --header "Content-Type: text/plain; charset=utf-8" --data "$msdp_payload" http://localhost:8080/update &

Note on Content-Type:
The default is "text/plain; charset=utf-8" which is suitable for sending a raw string like "{key}{value}".
If your server expects standard URL-encoded form data (e.g., "key1=value1&key2=value2"),
you should change the Content-Type to "application/x-www-form-urlencoded"
and ensure your payload is formatted accordingly.
]]>
</description>
</plugin>

<!-- Aliases -->
<aliases>
  <alias
    script="OnSendDataTrigger"
    match="send_http_data *"
    enabled="y"
    group="HttpSender"
    sequence="100"
  ></alias>
  <alias
    script="OnHttpConfigDefault"
    match="send_http_config"
    enabled="y"
    group="HttpSender"
    sequence="99"
  ></alias>
  <alias
    script="OnHttpConfigWithArgs"
    match="send_http_config *"
    enabled="y"
    group="HttpSender"
    sequence="100"
  ></alias>
</aliases>

<!-- Script -->
<script>
<![CDATA[
' --- Configuration Variable Names ---
Const VAR_URL = "HttpSender_URL"
Const VAR_CONTENT_TYPE = "HttpSender_ContentType"
Const VAR_SILENT_MODE = "HttpSender_SilentMode"

' --- Global variable to hold the LAST HTTP request object ---
' This is primarily to keep the COM object alive while it works in the background.
' It will be overwritten by subsequent requests.
Dim g_LastHttpRequest

Function IsSilentMode()
  Dim silent_val
  silent_val = LCase(Trim(World.GetVariable(VAR_SILENT_MODE)))
  If silent_val = "true" Or silent_val = "1" Or silent_val = "yes" Or silent_val = "on" Then
    IsSilentMode = True
  Else
    IsSilentMode = False
  End If
End Function

Sub OnPluginInstall()
  Set g_LastHttpRequest = Nothing ' Initialize
  World.DoAfterNote 1, "Plugin " & World.GetPluginName() & " version " & World.GetPluginInfo(World.GetPluginID(), 19) & " installed."
  If Len(Trim(World.GetVariable(VAR_URL))) = 0 Then
    World.SetVariable VAR_URL, "http://localhost:8080/update"
  End If
  If Len(Trim(World.GetVariable(VAR_CONTENT_TYPE))) = 0 Then
    World.SetVariable VAR_CONTENT_TYPE, "text/plain; charset=utf-8"
  End If
  If Len(Trim(World.GetVariable(VAR_SILENT_MODE))) = 0 Then
    World.SetVariable VAR_SILENT_MODE, "false" ' Default to not silent
  End If
  World.Note "Default configuration set for HttpDataSender (MSXML6 - Async Fire-and-Forget)."
  World.Note "Use 'show_http_config help' for config commands."
  World.Note "Use 'send_http_data DATA' to send data."
  Call ShowCurrentHttpConfig() ' Show config on install
End Sub

Sub OnPluginSaveState()
End Sub

Sub OnSendDataTrigger(sName, sLine, wildcards)
  Dim payload, alias_command_part
  alias_command_part = "send_http_data"
  payload = ""

  If LCase(Left(sLine, Len(alias_command_part) + 1)) = LCase(alias_command_part & " ") Then
    payload = Trim(Mid(sLine, Len(alias_command_part) + 2))
  Else
    If Not IsEmpty(wildcards) And Not (wildcards Is Nothing) And wildcards.Count > 0 Then
        On Error Resume Next
        Dim temp_wc_item : temp_wc_item = wildcards.Item(1)
        If Err.Number = 0 And VarType(temp_wc_item) = vbString Then payload = Trim(temp_wc_item)
        If Err.Number <> 0 Then Err.Clear
        On Error GoTo 0
    End If
  End If
  
  If Len(payload) = 0 Then
    World.Note "Usage: send_http_data {payload_string}"
    Exit Sub
  End If

  Dim http_obj_to_send ' Local variable to create the object
  Dim target_url, content_type
  target_url = Trim(World.GetVariable(VAR_URL))
  content_type = Trim(World.GetVariable(VAR_CONTENT_TYPE))

  If Len(target_url) = 0 Then
    World.ColourNote "indianred", "", "Error: Target URL not configured."
    Exit Sub
  End If
  If Len(content_type) = 0 Then content_type = "text/plain; charset=utf-8"

  On Error Resume Next
  Set http_obj_to_send = CreateObject("MSXML2.XMLHTTP.6.0")
  If Err.Number <> 0 Then
    If Not IsSilentMode() Then World.ColourNote "indianred", "", "Error creating MSXML2.XMLHTTP.6.0 object: " & Err.Description
    Err.Clear
    Exit Sub ' Don't proceed if object creation fails
  End If
  On Error GoTo 0

  ' --- ASYNCHRONOUS FIRE-AND-FORGET ---
  On Error Resume Next ' Catch errors during Open/Send
  
  http_obj_to_send.Open "POST", target_url, True ' True for asynchronous
  If Err.Number <> 0 Then
    If Not IsSilentMode() Then World.ColourNote "indianred", "", "Error during http.Open (Async): " & Err.Description
    Err.Clear
    Set http_obj_to_send = Nothing
    Exit Sub
  End If
  
  http_obj_to_send.SetRequestHeader "Content-Type", content_type
  
  If Not IsSilentMode() Then
    World.Note "Sending HTTP POST (MSXML6, Async Fire-and-Forget) to: " & target_url
  End If
  
  http_obj_to_send.Send payload 
  
  If Err.Number <> 0 Then
    If Not IsSilentMode() Then World.ColourNote "indianred", "", "Error during MSXML6 http.Send (Async): " & Err.Description
    Err.Clear
    Set http_obj_to_send = Nothing
    Exit Sub
  End If
  On Error GoTo 0

  ' Store this new object in the global variable.
  ' This keeps it alive. The previous object in g_LastHttpRequest (if any) will be released.
  Set g_LastHttpRequest = http_obj_to_send 
  
  ' If Not IsSilentMode() Then World.Note "Request sent. No confirmation will be received in MUSHclient." ' Optional message
End Sub


' --- Helper and Config Subs ---
Sub ShowCurrentHttpConfig()
  World.Note "--- HttpDataSender Configuration ---"
  World.Note "Target URL      : " & World.GetVariable(VAR_URL)
  World.Note "Content-Type    : " & World.GetVariable(VAR_CONTENT_TYPE)
  World.Note "Silent Mode     : " & World.GetVariable(VAR_SILENT_MODE)
  World.Note "------------------------------------"
End Sub

Sub ShowHttpConfigHelp()
    World.Note "--- HttpDataSender Configuration Help ---"
    World.Note "Usage: send_http_config [command] [value]"
    World.Note "  (no command) / show      - Displays current configuration."
    World.Note "  url <new_url>            - Sets the target URL."
    World.Note "  contenttype <mime_type>  - Sets Content-Type header."
    World.Note "  silent <true|false>      - Toggles silent mode (no status messages)."
    World.Note "------------------------------------"
End Sub

Sub OnHttpConfigDefault(sName, sLine, wildcards)
  Call ShowCurrentHttpConfig()
End Sub

Sub OnHttpConfigWithArgs(sName, sLine, wildcards)
  Dim command_args_string, action, param_value, parts, alias_command_part
  alias_command_part = "send_http_config"
  command_args_string = "" : action = "" : param_value = ""

  If LCase(Left(sLine, Len(alias_command_part) + 1)) = LCase(alias_command_part & " ") Then
    command_args_string = Trim(Mid(sLine, Len(alias_command_part) + 2))
  Else
    If Not IsEmpty(wildcards) And Not (wildcards Is Nothing) And wildcards.Count > 0 Then
        On Error Resume Next
        Dim temp_wc_item : temp_wc_item = wildcards.Item(1)
        If Err.Number = 0 And VarType(temp_wc_item) = vbString Then command_args_string = Trim(temp_wc_item)
        If Err.Number <> 0 Then Err.Clear
        On Error GoTo 0
    End If
  End If
  
  If Len(command_args_string) = 0 Then Call ShowHttpConfigHelp() : Exit Sub
  parts = Split(command_args_string, " ", 2)
  action = LCase(Trim(parts(0)))
  If UBound(parts) > 0 Then param_value = Trim(parts(1))

  Select Case action
    Case "show" : Call ShowCurrentHttpConfig()
    Case "url"
      If Len(param_value) > 0 Then
        World.SetVariable VAR_URL, param_value
        World.Note "HttpDataSender: Target URL set to: " & param_value
      Else World.Note "Usage: send_http_config url <new_url>"
      End If
    Case "contenttype", "content-type"
       If Len(param_value) > 0 Then
        World.SetVariable VAR_CONTENT_TYPE, param_value
        World.Note "HttpDataSender: Content-Type set to: " & param_value
      Else World.Note "Usage: send_http_config contenttype <mime_type>"
      End If
    Case "silent"
      Dim silent_setting
      If Len(param_value) > 0 Then
        silent_setting = LCase(param_value)
        If silent_setting = "true" Or silent_setting = "1" Or silent_setting = "yes" Or silent_setting = "on" Then
          World.SetVariable VAR_SILENT_MODE, "true"
          World.Note "HttpDataSender: Silent mode enabled."
        ElseIf silent_setting = "false" Or silent_setting = "0" Or silent_setting = "no" Or silent_setting = "off" Then
          World.SetVariable VAR_SILENT_MODE, "false"
          World.Note "HttpDataSender: Silent mode disabled."
        Else
          World.Note "Usage: send_http_config silent <true|false|on|off|1|0>"
        End If
      Else World.Note "Usage: send_http_config silent <true|false|on|off|1|0>"
      End If
    Case Else : Call ShowHttpConfigHelp()
  End Select
End Sub

Sub OnPluginEnable()
  World.DoAfterNote 0.5, "Plugin " & World.GetPluginName() & " enabled."
End Sub
Sub OnPluginDisable()
  World.Note "Plugin " & World.GetPluginName() & " disabled."
End Sub
Sub OnPluginClose()
  ' Release the last http object if it exists
  If Not (g_LastHttpRequest Is Nothing) Then
    On Error Resume Next ' It might be in a state where abort fails
    g_LastHttpRequest.Abort()
    Set g_LastHttpRequest = Nothing
    If Err.Number <> 0 Then Err.Clear
    On Error GoTo 0
  End If
End Sub
]]>
</script>
</muclient>